application.name = hydra
application.config.location = /etc/hydra/application.conf

container.startup.timeout = 30s

hydra {
  endpoints = ["hydra.ingest.endpoints.IngestionEndpoint", "hydra.ingest.endpoints.SchemasEndpoint",
    "hydra.ingest.endpoints.IngestorRegistryEndpoint", "hydra.ingest.endpoints.IngestionWebSocketEndpoint"]
  ingest {
    classpath-scan = ${?hydra.ingest.classpath-scan} ["hydra.core.examples"]
  }
}

akka {

  logger-startup-timeout = 30s
  actor {
    provider = cluster
    extensions = ${?akka.extensions}[de.heikoseeberger.constructr.ConstructrExtension]
    deployment {
      #Do not remove this; if ingestors are not configured with a router under akka.deployment.actor,
      #a round-robin router is used with this configuration.
      default-ingestor-router {
        nr-of-instances = 2
        optimal-size-exploring-resizer {
          enabled = false
        }
        resizer {
          enabled = true
          lower-bound = 2
          upper-bound = 5
          pressure-threshold = 1
          rampup-rate = 0.2
          backoff-threshold = 0.3
          backoff-rate = 0.1
          messages-per-resize = 100
        }
      }
    }
  }
}

constructr {
  coordination {
    class-name = com.lightbend.constructr.coordination.zookeeper.ZookeeperCoordination
    nodes = ["localhost:2181"]
    zookeeper {
      rootpath = "/constructr"
    }
  }

  coordination-timeout = 3 seconds  // Maximum response time for coordination service (e.g. etcd)
  join-timeout = 15 seconds // Might depend on cluster size and network properties
  max-nr-of-seed-nodes = 0          // Any nonpositive value means Int.MaxValue
  nr-of-retries = 2          // Nr. of tries are nr. of retries + 1
  refresh-interval = 30 seconds // TTL is refresh-interval * ttl-factor
  retry-delay = 3 seconds  // Give coordination service (e.g. etcd) some delay before retrying
  ttl-factor = 2.0        // Must be greater or equal 1 + ((coordination-timeout * (1 + nr-of-retries) + retry-delay * nr-of-retries)/ refresh-interval)!
  ignore-refresh-failures = false      // Ignore failures once machine is already in "Refreshing" state. It prevents from FSM being terminated due to exhausted number of retries.
}
