container.startup.timeout = 30s

hydra {
  ingest {
    classpath-scan = ${?hydra.ingest.classpath-scan} ["hydra.core.examples"]

    endpoints = ["hydra.ingest.endpoints.IngestionEndpoint", "hydra.ingest.endpoints.SchemasEndpoint",
      "hydra.ingest.endpoints.IngestorRegistryEndpoint", "hydra.ingest.endpoints.IngestionWebSocketEndpoint"]

    #This section allows for pre-configuration of ingestors with request metadata
    ingestors {
      #this is the name of the ingestor (has to be unique.)
      test {
        #Either a 'class' or 'ref' element must be specified.
        #Use 'ref' to use an ingestor that already exists.
        #Use 'class' to create and configure a new ingestor instance. The same routing rules apply.
        class = hydra.core.examples.ingest.LoggingIngestor

        #All the other entries will become HydraRequestMetadata applied to every request
        hydra-kafka-topic = 123
      }
    }
  }
}

akka {

  actor {

    provider = remote

    deployment {
      #Do not remove this; if ingestors are not configured with a router under akka.deployment.actor,
      #a round-robin router is used with this configuration.
      default-ingestor-router {
        nr-of-instances = 2
        optimal-size-exploring-resizer {
          enabled = false
        }
        resizer {
          enabled = true
          lower-bound = 2
          upper-bound = 10
          pressure-threshold = 1
          rampup-rate = 0.2
          backoff-threshold = 0.3
          backoff-rate = 0.1
          messages-per-resize = 100
        }
      }
    }
  }
}
