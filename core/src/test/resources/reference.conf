application.name = hydra_test
application.config.location = ""

hydra_test {
  scan-packages = ["test.scan"]
  schema.registry.url = "mock"
  transports.test-transport.path = /user/test-transport
}

db-config = {
  url = "jdbc:h2:mem:test1"
  driver = org.h2.Driver
  connectionPool = disabled
  keepAliveConnection = true
}

h2-db {
  dataSourceClass = "slick.jdbc.DatabaseUrlDataSource"
  properties = {
    driver = "org.h2.Driver"
    url = "jdbc:h2:mem:hydra-test;DATABASE_TO_UPPER=false;DB_CLOSE_DELAY=-1"
    user = ""
    password = ""
  }
  numThreads = 10

  flyway {
    locations = "db/migration"
    initOnMigrate = true
  }
}

akka {
  discovery.method = akka-consul
  persistence.at-least-once-delivery.warn-after-number-of-unconfirmed-attempts = 10
  persistence.at-least-once-delivery.redeliver-interval = 100ms
  actor.provider = cluster
  extensions = ["com.romix.akka.serialization.kryo.KryoSerializationExtension$"]
  remote.artery.enabled = false
  persistence.journal.plugin = "akka.persistence.journal.inmem"
  // akka.persistence.journal.leveldb.dir = "/tmp/journal"
  logger-startup-timeout = 60s
  actor.tester.default {
    type = Dispatcher
    executor = "fork-join-executor"
    fork-join-executor {
      parallelism-min = 2
      parallelism-factor = 2.0
      parallelism-max = 6
    }
    throughput = 100
  }
}

kamon {
  metric {
    tick-interval = .5 second
  }
}