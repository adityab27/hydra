application {
  name = "hydra"
  config.location = "/etc/hydra/application.conf"
}

akka {
  loglevel = DEBUG
  loggers = ["akka.event.slf4j.Slf4jLogger"]

  actor {

    # Timeout for ActorSystem.actorOf
    creation-timeout = 20s

    typed {
      # Default timeout for typed actor methods with non-void return type
      timeout = 10s
    }

    hydra-dispatcher {
      mailbox-type = "akka.dispatch.UnboundedDequeBasedMailbox"
    }

    log-dead-letters-during-shutdown = off

    extensions = ["com.romix.akka.serialization.kryo.KryoSerializationExtension$"]

    serializers {
      java = "akka.serialization.JavaSerializer"
      kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
    }

    serialization-bindings {
      "org.joda.time.Instant" = kryo
      "scala.None$" = kryo
      "scala.Option" = kryo
      "scala.Some" = kryo
      "scala.collection.immutable.Nil$" = kryo
    }


    kryo {
      type = "graph"
      idstrategy = "explicit"
      serializer-pool-size = 1024
      kryo-reference-map = false
      buffer-size = 4096
      max-buffer-size = -1
      implicit-registration-logging = false
      kryo-trace = false
      mappings {
        "org.joda.time.Instant" = 10
        "scala.None$" = 11
        "scala.Option" = 12
        "scala.Some" = 13
        "scala.collection.immutable.Nil$" = 14
      }
    }
  }

  http.server.remote-address-header = on
}
