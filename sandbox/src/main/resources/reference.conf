application.config.location = /etc/hydra/hydra-sandbox.conf

hydra {
  ingest.classpath-scan = ["hydra.sandbox.ingest", "hydra.jdbc", "hydra.rabbit"]

  schema.registry.url = mock

  transports {
    classpath-scan = ["hydra.sandbox.transport", "hydra.jdbc", "hydra.rabbit"]
    file {
      destinations {
        tmp = /tmp/hydra-sandbox.txt
      }
    }
    jdbc {
      profiles {
        sandbox-db {
          dataSourceClassName = org.h2.jdbcx.JdbcDataSource
          dataSource.url = "jdbc:h2:mem:sandbox_table;DB_CLOSE_DELAY=-1"
          dataSource.user = sa
          dataSource.password = sa
        }
      }
    }
  }
}
akka {
  actor.provider = local
  extensions = [com.romix.akka.serialization.kryo.KryoSerializationExtension]
  persistence.journal.plugin = "akka.persistence.journal.inmem"
  persistence.snapshot-store.local.dir = "/tmp/hydra_sandbox_snapshots"
}

op-rabbit {
  topic-exchange-name = "hydra.test"
  channel-dispatcher = "op-rabbit.default-channel-dispatcher"
  default-channel-dispatcher {
    # Dispatcher is the name of the event-based dispatcher
    type = Dispatcher

    # What kind of ExecutionService to use
    executor = "fork-join-executor"

    # Configuration for the fork join pool
    fork-join-executor {
      # Min number of threads to cap factor-based parallelism number to
      parallelism-min = 2

      # Parallelism (threads) ... ceil(available processors * factor)
      parallelism-factor = 2.0

      # Max number of threads to cap factor-based parallelism number to
      parallelism-max = 4
    }
    # Throughput defines the maximum number of messages to be
    # processed per actor before the thread jumps to the next actor.
    # Set to 1 for as fair as possible.
    throughput = 100
  }
  connection {
    virtual-host = "/"
    hosts = ["10.107.217.151"]
    username = "guest"
    password = "guest"
    port = 5672
    ssl = false
    connection-timeout = 3s
  }
}